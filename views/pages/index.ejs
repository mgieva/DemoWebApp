<!DOCTYPE html>
<html>

<head>
  <link rel="stylesheet" type="text/css" href="stylesheets/main.css"/>
  <script src="/js/main.js"></script>
</head>

<body>

  <h1>5 Steps to Running A Successful Technical Workshop</h1>

  <div id="general">
  <p>
    Even if you study computer science in school, you usually get minimal experience building a practical project that you can refer to in interviews - and that experience is curcial for getting hired. That's why a few folks from the HubSpot Product organization came together to host a Building Your First Web App workshop for female students in the area. This was one of the most fun and productive workshops I've personally attended since now I have this awesome little app to tell you how we did it. Check out the five steps of running a successful technical workshop.
  </p>
  </div>

<div id="leaders" class="hidden">
<h2>1. Find the Leaders</h2>
<p>
First off, you need to have a few people who can take the charge on the workshop. For us those people were Zoe Sobin, a software engineer and recent Tufts computer science graduate, and our engineering recruiter Colleen Grant. This dynamic duo ensured that both the content and the organization of the entire event were stellar. Zoe focused on the agenda, including prep materials and the actual content. Colleen ensured that we had a good registration process, spread the word about the event internally and externally, and got us to more than 150 registrants.
</p>
</div>

<div id="prep-work" class="hidden">
<h2>2. Do the Prep Work Ahead of Time</h2>
<p>
I can't emphasize enough how important it was that we had done the right prep work for this workshop. That meant designing the content to match the audience interests and level, putting together the prep materials ahead of time, and making the projects realistic and achievable. Since this was a technical workshop, it required thinking through the environment setup, creating a common technical vocabulary (e.g. APIs, github, hedoku, etc) that all attendees understand, and even finding free tools that everyone could use. We held a dry run to ensure all these things were accounted for.
</p>
</div>

<div id="agenda" class="hidden">
<h2>3. Make the Agenda Diverse and Flexible</h2>
<p>
The entire workshop lasted for about six hours, but it felt like the time flew by thanks to our diverse agenda. We started out with a breakfast, a brief presentation about why we are hosting this workshop, and a few words from one of HubSpot's Directors of Engineering, Andrew Rodwin. Then, Zoe established a common vocabulary around how the Internet works and led us through the node.js and hedoku exercise. After lunch, three of HubSpot's software engineers and recent college grads Allison Ventura, Rose DeMaio and Talia Swartz led a few hands-on exercises that involved the usage of bootstrap,APIs and databases. Throughout the whole event we left some free time to continue working on any of the two projects, network with other attendees, grab a bite, and even get your resume reviewed. The agenda's flexibility made the whole day fun and interesting.
</p>
</div>

<div id="supporters" class="hidden">
<h2>4. Invite Supporters</h2>
<p>
We promoted the workshop internally and got a ton of volunteers across the engineering team to come and help out by answering questions and guiding the students through the two exercises. A mix of around 30-40 software engineers, designers, product manegers, and recruiters showed up to support in various ways. And, as you cn imagine, this made everything a lot of fun.
</p>
</div>

<div id="documentation" class="hidden">
<h2>5. Provide Good Documentation</h2>
<p>
Lastly, all the projects we walked through are available on github so folks could follow along and review the documentation even after the live event was over. You can find them here: 
<ul>Zoe's Demo App github: https://github.com/zsobin/DemoWebApp</ul>
<ul>Rose's Demo App github: https://github.com/rosedemaio/DemoWebApp</ul>
<ul>Talia's Demo App github: https://github.com/tswartz/DemoWebApp</ul>
<ul>Allison's Demo App github: https://github.com/allivent/DemoWebApp</ul>
</p>
</div>

<button id="read-more" type="button" onclick="myFunction()">
    Read on
  </button>

</body>

</html>